lxctrl =
{
    runtest = "true";   // or "false"
}

bma =
{
    device = "/dev";
    input-log = "bma.bin";
}



CAN=
{
    baud=250000;
    device="can0";
    nodes = (
	{ node_nr=1; name="can01";}
    );
}

# Signale
# Jedes Signal welches in der Software verwendet wird muss definiert werden.
# Es wird jeweils eine Zuordung SignalName <-> Ausgang getroffen.
#
# Es stehen 99 interne Signale zur verfügung. Dur den Eintrag .. map="intern.sig[99]"
# wird ein Signal auf diesen Eintrag gemaped.
#

SIGNAL = (
    { name="inHausAlarm";           map="can01.di[0]"; },
    { name="ISDNBusStoerung";       map="intern.sig[1]"; },
    { name="BmaAkkuFehler";         map="intern.sig[2]"; },
    { name="inRaiseAlarm";          map="can01.di[0]"; },
    { name="inHausAlarm";           map="intern.sig[4]"; },
    { name="BmzComOneOffline";      map="intern.sig[5]"; },
    { name="outSigHausalarm";       map="can01.do[0]"; },
    { name="outSigStörungsalarm";   map="intern.sig[7]"; },
    { name="outSigFehlendeRoutine"; map="intern.sig[8]"; }
);

db=
{
    user="lxctrl";
    pwd="lxctrl";
}

AlarmOutput=(
    { name="ALO001";  sigRaise="";  tON=250; }
);

Hausalarm =
{
    name="Hauslarm";
    id=2001;
    signal="outSigHausalarm";

}

Stoerungsalarm =
{
    name="Hauslarm";
    id=2002;
    signal="outSigHausalarm";
}

FehlendeRoutine =
{
    name="Hauslarm";
    id=2003;
    signal="outSigHausalarm";
}
